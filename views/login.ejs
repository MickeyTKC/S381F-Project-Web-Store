<html lang="en">
  <head>
    <title>Product Detail</title>
    <%- include('../views/components/head.ejs'); %>
    <style>
      :root {
        --input-padding-x: 0.75rem;
        --input-padding-y: 0.75rem;
      }

      html,
      body {
        height: 100%;
      }

      body {
        display: -ms-flexbox;
        display: -webkit-box;
        display: flex;
        -ms-flex-align: center;
        -ms-flex-pack: center;
        -webkit-box-align: center;
        align-items: center;
        -webkit-box-pack: center;
        justify-content: center;
        padding-top: 40px;
        padding-bottom: 40px;
        background-color: #f5f5f5;
      }

      .form-signin {
        width: 100%;
        max-width: 420px;
        padding: 15px;
        margin: 0 auto;
      }

      .form-label-group {
        position: relative;
        margin-bottom: 1rem;
      }

      .form-label-group > input,
      .form-label-group > label {
        padding: var(--input-padding-y) var(--input-padding-x);
      }

      .form-label-group > label {
        position: absolute;
        top: 0;
        left: 0;
        display: block;
        width: 100%;
        margin-bottom: 0; /* Override default `<label>` margin */
        line-height: 1.5;
        color: #495057;
        border: 1px solid transparent;
        border-radius: 0.25rem;
        transition: all 0.1s ease-in-out;
      }

      .form-label-group input::-webkit-input-placeholder {
        color: transparent;
      }

      .form-label-group input:-ms-input-placeholder {
        color: transparent;
      }

      .form-label-group input::-ms-input-placeholder {
        color: transparent;
      }

      .form-label-group input::-moz-placeholder {
        color: transparent;
      }

      .form-label-group input::placeholder {
        color: transparent;
      }

      .form-label-group input:not(:placeholder-shown) {
        padding-top: calc(
          var(--input-padding-y) + var(--input-padding-y) * (2 / 3)
        );
        padding-bottom: calc(var(--input-padding-y) / 3);
      }

      .form-label-group input:not(:placeholder-shown) ~ label {
        padding-top: calc(var(--input-padding-y) / 3);
        padding-bottom: calc(var(--input-padding-y) / 3);
        font-size: 12px;
        color: #777;
      }
    </style>
    <% const { user={} ,authenticated } = auth %>
  </head>
  <body>
    <form class="form-signin" action="api/auth/login" method="post">
      <div class="text-center mb-4">
        <img class="mb-4" src="img/icon.png" alt="" width="72" height="72" />
        <h1 class="h3 mb-3 font-weight-normal">Login</h1>
      </div>

      <div class="form-label-group">
        <input
          name="userId"
          type="text"
          id="inputId"
          class="form-control"
          placeholder="User ID"
          required
        />
        <label for="inputId">User ID</label>
      </div>

      <div class="form-label-group">
        <input
          name="password"
          type="password"
          id="inputPassword"
          class="form-control"
          placeholder="Password"
          required
        />
        <label for="inputPassword">Password</label>
      </div>

      <div class="checkbox mb-3">
        <span>Have not account ? </span><a href="/signup">Sign Up </a
        ><span>Now !</span>
      </div>
      <a class="btn btn-lg btn-secondary btn-block" href="/product"
        >Back to View Products</a
      >
      <button id="submit" class="btn btn-lg btn-primary btn-block">
        Login
      </button>
    </form>
    <%- include('../views/components/foot',{auth:auth}); %>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const form = document.querySelector(".form-signin");
        const url = "/api/auth/login";

        form.addEventListener("submit", async e => {
          e.preventDefault();

          const userId = document.querySelector("#inputId").value;
          const password = document.querySelector("#inputPassword").value;

          try {
            const response = await fetch(url, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ userId, password }),
            });

            if (response.ok) {
              // Sign in success
              window.location.href = "/"; // Redirect to dashboard or desired page
            } else {
              // Sign in failed
              const errorData = await response.json();
              console.log(errorData)
              const errorMessage =
                errorData.error || "Sign in failed. Please try again.";
              displayError(errorMessage);
            }
          } catch (error) {
            // Error occurred during sign in
            displayError("An error occurred. Please try again later.");
          }
        });

        function displayError(message) {
          const errorContainer = document.querySelector(".alert") || document.createElement("div");
          errorContainer.className = "alert alert-danger mt-3";
          errorContainer.textContent = message;
          form.appendChild(errorContainer);
        }
      });
    </script>
  </body>
</html>
